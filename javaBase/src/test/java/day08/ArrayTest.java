package day08;
/*
1，数组的理解：数组（array），是多个相同类型数据按照一定顺序排列的集合，并使用一个名字命名，通过编号的方式对这些数据进行统一管理
2，数组的常见概念
    》数组名
    〉下标（索引）
    》元素
    》数组的长度
3，数组的特点：
    1）数组是有序排列的
    2）数组属于引用数据类型的变量。数组的元素可以是任何的数据类型。
    3）创建数组对象会在内存中开辟一整块连续的空间
    4）数组的长度一旦确定以后就不可以修改。

4，数组的分类：
    1）按照维数；一维数组、二维数组。。。
    2）按照数组元素的类型：基本数据类型元素的数组、引用数据类型元素的数组

5,一维数组使用：
    1）一维数组的声明和初始化
    2）如何调用数组的指定位置的元素
    3）如何获取数组的长度、
    4）如何遍历数组
    5）数组元素的默认初始化值
    6）数组的内存解析
 */

public class ArrayTest {
    public static void main(String[] args) {
        //1）一维数组的声明和初始化
        int[] arr1; //声明
        //静态初始化：数组的初始化和数组元素的赋值操作同时进行
        arr1 = new int[]{1,2,3,4};//静态初始化
        int[] num = new int[]{2,3,4,5};//声明+初始化

        //也是正确的写法
        int[] num3 = {2,3,4,5};//动态初始化不可以省略new

        /*
        不可以这样写·
        int[] arr1;
        arr1 = {1,2,3,4};
         */

        //动态初始化：数组的初始化和数组元素的赋值操作分开进行
        String[] names = new String[3];
        names[0] = "王力宏";


        //总结：数组一旦初始化完成，其长度就确定了


        //2）如何调用数组的指定位置的元素：通过角标的方式调用
        //数组的角标（索引）是从0开始的，到数组的长度-1结束

        names[1] = "刘亦菲";
        names[2] = "迪丽热巴";

        //3）如何获取数组长度
        //属性：length
        System.out.println(names.length);

        //4)如何遍历数组
        for (int i = 0; i <names.length ; i++) {
            System.out.println(names[i]);

        }





    }



}
